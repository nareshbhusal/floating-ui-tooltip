{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/tooltip-element.ts","../src/setTooltipVisibility.ts","../src/constants.ts","../src/floating-ui-tooltip.ts","../src/defaultProps.ts","../src/index.ts","../src/addCSS.ts","../src/debounce.ts"],"sourcesContent":["import { Visibility, TransitionState } from './types';\n\nexport function doesElementHasTransition(element: HTMLElement): boolean {\n    function getCSSPropertyValue(element: HTMLElement, property: string): string {\n        // not working with firefox, pulling property `transition`\n        return window.getComputedStyle(element).getPropertyValue(property);\n    }\n    const transitionDuration = getCSSPropertyValue(element, \"transition-duration\");\n    return !(transitionDuration === \"0s\" || transitionDuration === \"0ms\");\n}\n\nexport function updateTransitionEndListener(\n  root: HTMLDivElement,\n  action: 'add' | 'remove',\n  listener: (event: TransitionEvent) => void\n): void {\n  const method = `${action}EventListener` as\n  | 'addEventListener'\n  | 'removeEventListener';\n\n  [\n    'transitionend',\n    'webkitTransitionEnd',\n    'oTransitionEnd'\n  ].forEach((event) => {\n    root[method](event, listener as EventListener);\n  });\n}\n\nexport function setTransitionState(element: HTMLDivElement, state: TransitionState) {\n  element.setAttribute('data-transition-state', state);\n  // console.log('>> new transition state: '+state)\n}\n\nexport function getTransitionState(element: HTMLDivElement): TransitionState {\n  return <TransitionState>element.getAttribute('data-transition-state');\n}\n\nexport function setElementVisibility(tooltipElement: HTMLDivElement, newVisibilityState: Visibility) {\n\n  tooltipElement.setAttribute('data-state', newVisibilityState);\n  Object.assign(tooltipElement.style, {\n    visibility: newVisibilityState,\n  });\n}\n\nexport function onTransitionEnd(element: HTMLDivElement, callback: Function) {\n\n  function listener(e) {\n    if(e.target === element) {\n      updateTransitionEndListener(<HTMLDivElement>element, 'remove', listener);\n      try {\n        callback();\n      } catch (err) {\n        console.error(err);\n        element['_instance'].props.onHide();\n      }\n    }\n  }\n  updateTransitionEndListener(<HTMLDivElement>element, 'remove', listener);\n  updateTransitionEndListener(<HTMLDivElement>element, 'add', listener);\n}\n\nexport function scrollElementIntoView(element: HTMLElement) {\n  element.scrollIntoView({\n    behavior: \"smooth\",\n    block: \"center\",\n    inline: \"center\",\n  });\n}\n\nexport const isDOMElement = el => el instanceof Element\n","import { setTransitionState, setElementVisibility } from './utils';\n\nexport const NODE_CLASSNAME_PREFIX = 'floating-ui-tooltip';\n\nexport function div(): HTMLDivElement {\n  return document.createElement('div');\n}\n\nconst createTooltipElement = (instanceEnv): HTMLDivElement => {\n\n  const tooltipRoot = div();\n  const tooltipBox = div();\n  const tooltipContent = div();\n  const arrowElement = div();\n\n  tooltipRoot.className = `${NODE_CLASSNAME_PREFIX}-root`;\n  tooltipBox.className = `${NODE_CLASSNAME_PREFIX}-box`;\n  tooltipContent.className = `${NODE_CLASSNAME_PREFIX}-content`;\n  arrowElement.className = `${NODE_CLASSNAME_PREFIX}-arrow`;\n\n  tooltipBox.appendChild(tooltipContent);\n  tooltipBox.appendChild(arrowElement);\n  tooltipRoot.appendChild(tooltipBox);\n\n  Object.assign(tooltipContent.style, {\n    maxWidth: `${instanceEnv.props.maxWidth}px`\n  })\n\n  tooltipBox.setAttribute('role', 'tooltip');\n  setElementVisibility(tooltipRoot, 'hidden');\n  setTransitionState(tooltipRoot, 'hidden');\n\n  Object.assign(tooltipRoot.style, {\n    zIndex: instanceEnv.props.zIndex,\n    visibility: 'hidden',\n    left: `0px`,\n    top: `0px`\n  });\n  tooltipRoot['_instance'] = instanceEnv;\n  return tooltipRoot;\n}\n\n\nexport interface TooltipElementChildren {\n  box: HTMLDivElement;\n  content: HTMLDivElement;\n  arrow: HTMLDivElement;\n}\n\nexport function getChildren(tooltipElement: Element): TooltipElementChildren {\n  return {\n    box: tooltipElement.querySelector(`.${NODE_CLASSNAME_PREFIX}-box`)!,\n    content: tooltipElement.querySelector(`.${NODE_CLASSNAME_PREFIX}-content`)!,\n    arrow: <HTMLDivElement>tooltipElement.querySelector(`.${NODE_CLASSNAME_PREFIX}-arrow`) || undefined\n  };\n}\n\nexport default createTooltipElement;\n","import { onTransitionEnd, getTransitionState, setTransitionState, setElementVisibility } from './utils';\nimport { Visibility, TransitionState } from './types';\n\nconst setTooltipVisibilityState = (tooltipElement: HTMLDivElement, visibility: Visibility): void => {\n  const instance = tooltipElement['_instance'];\n  instance.setState({\n    isShown: visibility === 'visible'\n  });\n}\n\nlet timeout: any;\n\nconst clearQueue = (timeout: any) => clearTimeout(timeout);\n\nconst queue = (tooltipElement: HTMLDivElement, newVisibilityState: VisibilityState, updateDebounce: number): void => {\n  const timeoutDuration = updateDebounce || 100;\n\n  clearTimeout(timeout);\n  timeout = setTimeout(() => {\n    setTooltipVisibility(tooltipElement, newVisibilityState);\n  }, timeoutDuration);\n}\n\n\nexport default function setTooltipVisibility(tooltipElement: HTMLDivElement, newVisibilityState: VisibilityState) {\n  clearQueue(timeout);\n  const instance = tooltipElement['_instance'];\n  const updateDebounce = instance.props.updateDebounce;\n  const currentTransitionState: TransitionState = getTransitionState(tooltipElement);\n\n  /* console.log('``````````')\n  console.log('\\n')\n  console.log(newVisibilityState, currentTransitionState); */\n\n  if (newVisibilityState === 'visible') {\n    if (currentTransitionState === 'shown' || currentTransitionState === 'showing') {\n      // console.log(`already ${currentTransitionState}`)\n      return;\n\n    } else if (currentTransitionState === 'hidden') {\n      // console.log('showing')\n      setTransitionState(tooltipElement, 'showing');\n      // proceed to show\n\n    } else if (currentTransitionState === 'hiding') {\n      // console.log(`cancelling ${currentTransitionState}`)\n      queue(tooltipElement, newVisibilityState, updateDebounce);\n      return;\n    }\n  } else {\n    if (currentTransitionState === 'hidden' || currentTransitionState === 'hiding') {\n      // console.log(`already ${currentTransitionState}`)\n      return;\n\n    } else if (currentTransitionState === 'shown') {\n      setTransitionState(tooltipElement, 'hiding');\n      instance.props.onHide(instance);\n      // proceed to hide\n\n    } else if (currentTransitionState === 'showing') {\n      // console.log(`cancelling ${currentTransitionState}`)\n      queue(tooltipElement, newVisibilityState, updateDebounce);\n      return;\n    }\n  }\n  const newTransitionState = newVisibilityState === 'visible' ? 'shown' : 'hidden';\n\n  if (instance.transitionDuration !== 0) {\n    onTransitionEnd(tooltipElement, () => {\n      setTooltipVisibilityState(tooltipElement, newVisibilityState);\n      setTransitionState(tooltipElement, newTransitionState);\n\n      newVisibilityState === 'visible' && instance.props.onShow(instance);\n      /* if (LAST_VISIBILITY_STATE) {\n        console.log('LAST EVENT FIRED')\n        setTooltipVisibility(tooltipElement, LAST_VISIBILITY_STATE);\n      } */\n    });\n\n    setElementVisibility(tooltipElement, newVisibilityState);\n  } else {\n    setElementVisibility(tooltipElement, newVisibilityState);\n    setTransitionState(tooltipElement, newTransitionState);\n    newVisibilityState === 'visible' && instance.props.onShow(instance);\n  }\n  // for hiding: run onHide hook before dom change\n  // for showing: make dom change before running onShow\n}\n","export const SCREEN_EDGE_MARGIN = 16;\nexport const TIP_EDGE_MARGIN = 2;\nexport const DEFAULT_TIP_SIZE = 12;\n","import {\n  computePosition,\n  size,\n  flip,\n  shift,\n  offset,\n  arrow,\n  autoPlacement,\n  hide,\n} from '@floating-ui/dom';\nimport { getChildren } from './tooltip-element';\nimport { Props, TooltipState, Visibility, Placement, Position } from './types';\nimport { scrollElementIntoView } from './utils';\nimport setTooltipVisibility from './setTooltipVisibility';\n\nimport { SCREEN_EDGE_MARGIN, TIP_EDGE_MARGIN, DEFAULT_TIP_SIZE } from './constants';\n\nconst TIP_WIDTH = Math.sqrt(2 * DEFAULT_TIP_SIZE ** 2) / 2;\n\nconst TIP_SIDES_MAP = {\n  top: \"bottom\",\n  right: \"left\",\n  bottom: \"top\",\n  left: \"right\"\n};\n\nconst isElementOverflowingDocument = (element) => {\n  const elementRect = element.getBoundingClientRect();\n  const documentRect = document.documentElement.getBoundingClientRect();\n  return elementRect.top < documentRect.top ||\n    elementRect.bottom > documentRect.bottom ||\n    elementRect.left < documentRect.left ||\n    elementRect.right > documentRect.right;\n}\n\nconst getPosition = ({ passedPlacement, tooltipElement, toResetPosition }): Position => {\n  const {\n    orientation\n  } = passedPlacement;\n\n  const currentPosition = tooltipElement['_instance'].state.fui?.placement;\n  if (!currentPosition){\n    return passedPlacement.position;\n  }\n\n  if (!toResetPosition) return currentPosition;\n  if (isElementOverflowingDocument(tooltipElement)) {\n    console.log('tooltip overflown')\n    if (orientation === 'auto') {\n      return 'auto';\n    }\n  } else {\n    // console.log('tooltip not overflown')\n  }\n  return currentPosition;\n}\n\n\nconst renderTooltip = ({ fui, newlyShown, scrollIntoView, hideOnReferenceHidden, hideOnTooltipEscape, tooltipElement, arrowElement, target, toHide, showOnCreate, arrowSizeScale }) => {\n  const { x, y, placement, middlewareData } = fui;\n\n  const { referenceHidden, escaped } = middlewareData.hide!;\n\n  if (referenceHidden && newlyShown && scrollIntoView) {\n    scrollElementIntoView(target);\n  }\n\n  let arrowX,\n  arrowY;\n  if(middlewareData.arrow){\n    arrowX = middlewareData.arrow.x;\n    arrowY = middlewareData.arrow.y;\n  }\n  const arrowOffCenter = middlewareData.arrow!.centerOffset !== 0;\n\n  let visibility: Visibility = ((\n    hideOnReferenceHidden && referenceHidden) ||\n    (hideOnTooltipEscape && escaped) ||\n    toHide) ? 'hidden' : 'visible' as const;\n\n  if (visibility === 'visible' && newlyShown && !showOnCreate){\n    visibility = 'hidden' as const;\n  }\n\n  setTooltipVisibility(<HTMLDivElement>tooltipElement, visibility);\n\n  Object.assign(tooltipElement.style, {\n    left: `${x}px`,\n    top: `${y}px`\n  });\n\n  const TIP_SIZE = arrowSizeScale * DEFAULT_TIP_SIZE;\n\n  const staticSide = TIP_SIDES_MAP[placement.split(\"-\")[0]];\n  let staticSideTipSizeMultiplier: string | number = 0;\n  let top: string | number = 0;\n  let left: string | number = 0;\n  left = arrowX !== null ? `${arrowX + (TIP_SIZE)}px` : \"\";\n\n  switch(staticSide) {\n    case 'top':\n      staticSideTipSizeMultiplier = 1/1.7;\n    staticSideTipSizeMultiplier = 1/2;\n    left = arrowX !== null ? `${arrowX + (TIP_SIZE*staticSideTipSizeMultiplier)}px` : \"\";\n    break;\n    case 'bottom':\n      staticSideTipSizeMultiplier = 1/2;\n    left = arrowX !== null ? `${arrowX + (TIP_SIZE*staticSideTipSizeMultiplier)}px` : \"\";\n    break;\n    case 'left':\n      staticSideTipSizeMultiplier = 0.005;\n    left = arrowX !== null ? `${arrowX}px` : \"\",\n    top = arrowY !== null ? `${arrowY - (TIP_SIZE*staticSideTipSizeMultiplier)/2}px` : \"\";\n    break;\n    case 'right':\n      staticSideTipSizeMultiplier = 1;\n    left = arrowX !== null ? `${arrowX}px` : \"\",\n    top = arrowY !== null ? `${arrowY - (TIP_SIZE*staticSideTipSizeMultiplier)/2}px` : \"\";\n    break;\n  }\n\n  top = arrowY !== null ? `${arrowY - (TIP_SIZE*staticSideTipSizeMultiplier)/2}px` : \"\";\n\n  top = arrowY !== null ? `${arrowY}px` : \"\";\n  Object.assign(arrowElement.style, {\n    visibility: arrowOffCenter ? 'hidden' : 'visible',\n    left,\n    top,\n    right: \"\",\n    bottom: \"\",\n    width: `${TIP_SIZE}px`,\n    height: `${TIP_SIZE}px`,\n    [staticSide]: `-${TIP_SIZE*staticSideTipSizeMultiplier}px`\n  });\n}\n\nconst computeTooltip = async ({ passedPlacement, toResetPosition, passedOffset, resetPlacementOnUpdate, newlyShown, toShift, toShowArrow, arrowElement, tooltipElement, target }) => {\n\n  const position = getPosition({\n    passedPlacement,\n    tooltipElement,\n    toResetPosition\n  });\n\n  const toEnableAutoPlacement = position === 'auto' && (newlyShown || resetPlacementOnUpdate);\n  const toEnableShift = toShift && newlyShown;\n\n  const computePositionConfig = {\n    ...position !== 'auto' && {\n      placement: position,\n    },\n    middleware: [\n      offset({\n        mainAxis: passedOffset[0],\n        crossAxis: passedOffset[1]\n      }),\n      ...toEnableAutoPlacement ? [\n        autoPlacement(),\n      ]: [],\n      ...toEnableShift ? [\n        shift({ padding: SCREEN_EDGE_MARGIN }),\n      ]: [],\n      ...toShowArrow ? [\n        arrow({\n          element: arrowElement,\n          padding: TIP_EDGE_MARGIN,\n        })\n      ]: [],\n      size({\n        apply({width, height, reference, floating}) {\n        }\n      }),\n      hide()\n    ]\n  }\n  return await computePosition(target, tooltipElement, computePositionConfig);\n}\n\nconst floatingUITooltip = async (\n  tooltipProps: Props,\n  tooltipElement: HTMLElement,\n  target: HTMLElement,\n  toHide: boolean,\n  toResetPosition: boolean | undefined,\n  setState: (state: Partial<TooltipState>)=> void\n) => {\n  const { toFlip=false, toShift=true } = {};\n\n  let {\n    placement: passedPlacement,\n    hideOnReferenceHidden,\n    offset: passedOffset,\n    hideOnTooltipEscape,\n    arrowSizeScale,\n    resetPlacementOnUpdate,\n    arrow: toShowArrow,\n    scrollIntoView,\n    showOnCreate\n  } = tooltipProps;\n\n  const { arrow: arrowElement } = getChildren(tooltipElement);\n  const newlyShown = !tooltipElement['_instance'].getState().fui;\n\n\n  if(!target) {\n    return console.warn('target element not found');\n  }\n\n  let fui = await computeTooltip({ passedPlacement, toResetPosition, passedOffset, resetPlacementOnUpdate, toShift, toShowArrow, arrowElement, tooltipElement, target, newlyShown });\n\n  renderTooltip({ fui, newlyShown, scrollIntoView, hideOnReferenceHidden, hideOnTooltipEscape, tooltipElement, arrowElement, target, toHide, showOnCreate, arrowSizeScale });\n\n  setState({\n    fui\n  });\n  return fui;\n}\n\nexport default floatingUITooltip;\n","import { Instance, TooltipState } from './types';\n\nconst defaultProps = {\n  allowHTML: true,\n  content: '',\n  arrow: true,\n  scrollIntoView: false,\n  transitionDuration: [300, 250],\n  offset: [0, 0],\n  factorArrowInOffset: true,\n  hideOnClick: true, // `true` for anywhere outside the tooltip to hide it, 'target' for only when the target is clicked\n  onClickOutside: (instance: Instance, event: MouseEvent) => {},\n  onShow: (instance: Instance) => {},\n  onHide: (instance: Instance) => {},\n  onStateChange: (oldState: TooltipState, newState: Partial<TooltipState>) => {},\n  onRemove: () => {},\n  onBeforeFirstRender: () => {},\n  onAfterFirstRender: () => {},\n  placement: {\n    position: 'top',\n    orientation: 'fixed'\n  },\n  resetPlacementOnUpdate: false,\n  hideOnTooltipEscape: true,\n  hideOnReferenceHidden: true,\n  showOnCreate: true,\n  maxWidth: 350,\n  updateDebounce: 100,\n  zIndex: 99999,\n  arrowSizeScale: 1,\n  updateOnEvents: 'resize scroll'\n}\n\nexport default defaultProps;\n","import createTooltipElement, { getChildren } from './tooltip-element';\nimport addCSS from './addCSS';\nimport { Props, TooltipState, Instance } from './types';\nimport floatingUITooltip from './floating-ui-tooltip';\nimport defaultProps from './defaultProps';\nimport debounce from './debounce';\nimport { autoUpdate } from '@floating-ui/dom';\n\nimport { DEFAULT_TIP_SIZE } from './constants';\nexport const DEFAULT_ARROW_SIZE = DEFAULT_TIP_SIZE;\n\n// TODO: Ability to import js bundle without the css\n\nconst appendTo = () => document.body;\n\nclass Tooltip {\n  readonly props: Props;\n  readonly reference: HTMLElement;\n  public tooltipElement!: HTMLDivElement;\n  private state: TooltipState = {\n    isShown: false,\n    isRemoved: false,\n    fui: undefined\n  }\n  private updateListenerCleanup: () => void = () => {};\n  private toHideTooltip: boolean = false;\n  private debouncedUpdate!: (arg: boolean | undefined) => void;\n  private transitionDuration: number = 0;\n\n  constructor(props: Props, target: HTMLElement) {\n    this.props = props;\n    // this.props.updateDebounce = 0; // test\n    this.reference = target;\n    window['tp'] = this;\n    addCSS();\n    this.toHideTooltip = !this.props.showOnCreate;\n  }\n\n  private hookEventListeners() {\n    this.debouncedUpdate = debounce(\n      this.update.bind(this),\n      this.props.updateDebounce\n    );\n    const autoUpdateCleanup = autoUpdate(\n      this.reference,\n      this.tooltipElement,\n      () => this.debouncedUpdate(undefined),\n    );\n\n    const debouncedUpdateHandler = () =>\n      this.debouncedUpdate(undefined) as unknown as EventListenerOrEventListenerObject;\n\n    this.props.updateOnEvents.split(' ').forEach(event => {\n      window.addEventListener(\n        <keyof WindowEventMap>event,\n        debouncedUpdateHandler\n      );\n    });\n    window.addEventListener('click', this.clickHandler.bind(this));\n\n    // prepare event listeners' cleanup method\n    this.updateListenerCleanup = () => {\n      autoUpdateCleanup();\n      window.removeEventListener('click', this.clickHandler.bind(this));\n\n      this.props.updateOnEvents.split(' ').forEach(event => {\n        window.removeEventListener(\n          <keyof WindowEventMap>event,\n          debouncedUpdateHandler\n        );\n      });\n    }\n  }\n\n  private clickHandler = (event: MouseEvent) => {\n    if (!this.state.isShown) return;\n\n    // if click is outside of tooltip and reference\n    if (\n      !this.tooltipElement.contains(event.target as Node) &&\n      !this.reference.contains(event.target as Node)\n    ) {\n      if (this.props.onClickOutside) {\n        this.props.onClickOutside(this, event);\n      }\n    }\n\n    if (this.props.hideOnClick === 'target') {\n      if (event.target === this.reference) {\n        this.hide();\n      }\n    } else if (this.props.hideOnClick) {\n      this.hide();\n    }\n  }\n\n  private updateTransitionDuration(duration: number) {\n    this.transitionDuration = duration;\n    this.tooltipElement.style.transitionDuration = `${duration}ms`;\n  }\n\n  public async create() {\n    this.tooltipElement = createTooltipElement(this);\n    this.updateTransitionDuration(\n      this.props.transitionDuration[this.toHideTooltip ? 0 : 1]\n    );\n    const { content: contentBox } = getChildren(this.tooltipElement);\n    const { allowHTML, content } = this.props;\n    if (allowHTML) {\n      if (content instanceof Element) {\n        contentBox.appendChild(content);\n      } else {\n        contentBox.innerHTML = content;\n      }\n    } else {\n      if (!(content instanceof Element)) {\n        contentBox.innerText = content;\n      }\n    }\n\n    appendTo().appendChild(this.tooltipElement);\n    this.props.onBeforeFirstRender();\n\n    const initFloatingUI = async () => {\n      await floatingUITooltip(\n        this.props,\n        this.tooltipElement,\n        this.reference,\n        this.toHideTooltip,\n        true,\n        this.setState.bind(this),\n      );\n      await this.update(false, true);\n      await this.update(false, true);\n      this.hookEventListeners();\n    }\n    await initFloatingUI();\n    if(this.props.showOnCreate){\n      await this.show();\n    } else {\n      await this.hide();\n    }\n    this.props.onAfterFirstRender();\n  }\n\n  public getState(): TooltipState {\n    return this.state;\n  }\n\n  private setState(newState: Partial<TooltipState>) {\n    const visibilityChanged = typeof newState.isShown !== 'undefined' &&\n      newState.isShown !== this.state.isShown;\n\n    if (visibilityChanged) {\n      this.updateTransitionDuration(\n        this.props.transitionDuration[newState.isShown ? 1 : 0]\n      );\n    }\n\n    this.props.onStateChange(this.state, newState);\n\n    this.state = {\n      ...this.state,\n      ...newState\n    }\n  }\n\n  public async update(toHide?: boolean, toResetPosition?: boolean) {\n    toHide = toHide || this.toHideTooltip || false;\n    await floatingUITooltip(\n      this.props,\n      this.tooltipElement,\n      this.reference,\n      toHide,\n      toResetPosition,\n      this.setState.bind(this)\n    );\n  }\n\n  public async hide() {\n    // hide() when tooltip is already hidden should prevent event listeners\n    // from showing tooltip without before running show() manually\n    this.toHideTooltip = true;\n    await this.update(true);\n  }\n\n  public async show() {\n    // console.log(`show() ran with resetPosition: ${resetPosition}`);\n    this.toHideTooltip = false;\n    await this.update(false);\n  }\n\n  public remove() {\n    this.tooltipElement.remove();\n    this.state = {\n      isShown: false,\n      isRemoved: true,\n      fui: undefined\n    }\n    this.updateListenerCleanup();\n    console.log('removed all event listeners and observers');\n    this.props.onRemove();\n  }\n}\n\nfunction isElementInViewport (el) {\n  const rect = el.getBoundingClientRect();\n  return (\n    rect.top >= 0 &&\n      rect.left >= 0 &&\n      rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /* or $(window).height() */\n    rect.right <= (window.innerWidth || document.documentElement.clientWidth) /* or $(window).width() */\n  );\n}\n\nasync function createTooltip(\n  reference: HTMLElement,\n  props: Partial<Props>\n): Promise<Instance> {\n  const placement = props.placement || defaultProps.placement;\n  const transitionDuration = props.transitionDuration || defaultProps.transitionDuration;\n  const offset = props.offset || defaultProps.offset;\n\n  // NOTE: Interesting that the properties with undefined values still won't be replaced...\n  // -- Relevant to Lusift?\n\n  // remove properties with value of undefined\n  Object.keys(props).forEach(key => props[key] === undefined && delete props[key])\n\n  const allProps: Props = {\n    ...defaultProps,\n    ...props,\n    placement: <Props['placement']>placement,\n    transitionDuration: <Props['transitionDuration']>transitionDuration,\n    offset: <Props['offset']>offset,\n  };\n  allProps.factorArrowInOffset = allProps.arrow && allProps.factorArrowInOffset;\n\n  if (allProps.factorArrowInOffset) {\n    const arrowSize = allProps.arrowSizeScale * DEFAULT_ARROW_SIZE;\n    allProps.offset[0] = allProps.offset[0]! + (arrowSize * Math.sqrt(2) / 2);\n  }\n  const tooltipInstance = new Tooltip(allProps, reference);\n\n  await tooltipInstance.create();\n\n  const instance: Instance = {\n    props: tooltipInstance.props,\n    reference: tooltipInstance.reference,\n    tooltipElement: tooltipInstance.tooltipElement,\n    getState: tooltipInstance.getState.bind(tooltipInstance),\n    show: tooltipInstance.show.bind(tooltipInstance),\n    hide: tooltipInstance.hide.bind(tooltipInstance),\n    remove: tooltipInstance.remove.bind(tooltipInstance),\n    update: tooltipInstance.update.bind(tooltipInstance),\n  }\n\n  return instance;\n}\n\nexport default createTooltip;\n","import css from './css/style.css';\n\nconst addCSS = () => {\n\n  const defaultStyle = document.createElement(\"style\");\n  defaultStyle.type = \"text/css\";\n  defaultStyle.setAttribute(\"floating-ui-tooltip-default\", \"\");\n  defaultStyle.textContent = css;\n\n  document.head.appendChild(defaultStyle);\n}\n\nexport default addCSS;\n","function debounce<T>(\n  fn: (arg: T) => void,\n  ms: number\n): (arg: T) => void {\n  // Avoid wrapping in `setTimeout` if ms is 0 anyway\n  if (ms === 0) {\n    return fn;\n  }\n\n  let timeout: any;\n\n  return (arg): void => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      fn(arg);\n    }, ms);\n  };\n}\n\nexport default debounce;\n"],"names":["updateTransitionEndListener","root","action","listener","method","forEach","event","setTransitionState","element","state","setAttribute","setElementVisibility","tooltipElement","newVisibilityState","Object","assign","style","visibility","div","document","createElement","getChildren","box","querySelector","content","arrow","undefined","timeout","queue","updateDebounce","timeoutDuration","clearTimeout","setTimeout","setTooltipVisibility","clearQueue","instance","props","currentTransitionState","getAttribute","onHide","newTransitionState","transitionDuration","callback","e","target","err","console","error","onTransitionEnd","setState","isShown","setTooltipVisibilityState","onShow","TIP_SIDES_MAP","top","right","bottom","left","getPosition","_a","elementRect","documentRect","passedPlacement","toResetPosition","orientation","currentPosition","fui","placement","getBoundingClientRect","documentElement","log","position","computeTooltip","passedOffset","resetPlacementOnUpdate","newlyShown","toShift","toShowArrow","arrowElement","toEnableAutoPlacement","toEnableShift","computePositionConfig","middleware","offset","mainAxis","crossAxis","autoPlacement","shift","padding","size","apply","hide","computePosition","_b","floatingUITooltip","tooltipProps","toHide","_c","hideOnReferenceHidden","hideOnTooltipEscape","arrowSizeScale","scrollIntoView","showOnCreate","getState","warn","arrowX","arrowY","x","y","middlewareData","referenceHidden","escaped","behavior","block","inline","arrowOffCenter","centerOffset","TIP_SIZE","staticSide","split","staticSideTipSizeMultiplier","width","height","renderTooltip","_d","defaultProps","allowHTML","factorArrowInOffset","hideOnClick","onClickOutside","onStateChange","oldState","newState","onRemove","onBeforeFirstRender","onAfterFirstRender","maxWidth","zIndex","updateOnEvents","defaultStyle","this","isRemoved","_this","contains","reference","window","type","textContent","head","appendChild","toHideTooltip","Tooltip","debouncedUpdate","fn","ms","arg","debounce","update","bind","autoUpdateCleanup","autoUpdate","debouncedUpdateHandler","addEventListener","clickHandler","updateListenerCleanup","removeEventListener","duration","instanceEnv","tooltipRoot","tooltipBox","tooltipContent","className","NODE_CLASSNAME_PREFIX","updateTransitionDuration","contentBox","Element","innerHTML","innerText","body","initFloatingUI","hookEventListeners","show","remove","keys","key","allProps","arrowSize","Math","sqrt","tooltipInstance","create"],"mappings":"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"}